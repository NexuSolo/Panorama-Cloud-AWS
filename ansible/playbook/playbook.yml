---
- name: Setup Docker Swarm Cluster
  hosts: managers
  become: yes
  tasks:
    - name: Update the apt package index
      apt:
        update_cache: yes

    - name: Install packages to allow apt to use a repository over HTTPS
      apt:
        name:
          - ca-certificates
          - curl
          - gnupg
        state: present

    - name: Create directory for Docker's keyring
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Add Docker's official GPG key
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: '0644'

    - name: Add Docker's repository to apt sources
      ansible.builtin.shell: |
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null

    - name: Update the apt package index again
      apt:
        update_cache: yes

    - name: Install Docker packages
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    - name: Enable and start Docker service
      systemd:
        name: docker
        enabled: yes
        state: started

    - name: Install Python pip
      apt:
        name: python3-pip
        state: present

    - name: install jsondiff
      apt:
        name: python3-jsondiff
        state: present

    - name: Send docker-compose.yml to manager node
      copy:
        src: docker-compose.yml
        dest: /root/docker-compose.yml

    - name: Copy conf directory to manager node
      copy:
        src: default.conf
        dest: /root/conf/
        mode: '0755'

    - name: Copy db directory to manager node
      copy:
        src: db-init-scripts
        dest: /root/db/
        mode: '0755'

    - name: Copy prometheus directory to manager node
      copy:
        src: prometheus
        dest: /root
        mode: '0755'

    - name: Copy grafana directory to manager node
      copy:
        src: grafana
        dest: /root
        mode: '0755'

    - name: Initialize Docker Swarm
      shell: docker swarm init --advertise-addr {{ aws_ip }}
      register: swarm_init_output
      changed_when: "'Swarm initialized' in swarm_init_output.stdout"

    - name: Extract join token for workers
      shell: docker swarm join-token worker -q
      register: worker_join_token

    - name: Create a docker stack
      docker_stack:
        state: present
        name: mystack
        compose:
          - /root/docker-compose.yml

- name: Join workers to the swarm
  hosts: workers
  become: yes
  tasks:
    - name: Update the apt package index
      apt:
        update_cache: yes

    - name: Install packages to allow apt to use a repository over HTTPS
      apt:
        name:
          - ca-certificates
          - curl
          - gnupg
        state: present

    - name: Create directory for Docker's keyring
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Add Docker's official GPG key
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: '0644'

    - name: Add Docker's repository to apt sources
      ansible.builtin.shell: |
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null

    - name: Update the apt package index again
      apt:
        update_cache: yes

    - name: Install Docker packages
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    - name: Enable and start Docker service
      systemd:
        name: docker
        enabled: yes
        state: started

    - name: Join Docker Swarm as worker
      shell: docker swarm join --token {{ hostvars['manager']['worker_join_token'].stdout }} {{ hostvars['manager']['aws_ip'] }}:2377
      when: hostvars['manager']['worker_join_token'].stdout != ""
